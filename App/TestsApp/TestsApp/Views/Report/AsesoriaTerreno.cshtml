@model IEnumerable<TestsApp.Models.ExamenUsuario>

@{
    ViewBag.Title = "Reporte";
    //Layout = "~/Views/Shared/_LayoutPrueba.cshtml";
    string aster = new TestsApp.Models.TestsAppBDEntities().NombreTabla.First(r => r.Tabla == "Aster").NombreMostrar;
}


<h2>Reporte de Asesoría en Terreno</h2>

@Scripts.Render("~/bundles/highstocks")
@Scripts.Render("~/bundles/highchartsmodules")

<ul class="nav nav-tabs" id="myTab">
    <li class="active"><a href="#rptHistorial">Historial</a></li>
    <li><a href="#rptRanking">Ránking</a></li>
</ul>
<div id="modal-fechasComparativo" class="modal hide fade" tabindex="-1" data-width="450" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3>Elegir Tipo de Examen</h3>
    </div>
    <div class="modal-body">
        <div class="row-fluid">
            <div class="span12">
                <div class="row-fluid">
                    <div class="span6">
                        <div class="input-append date datepicker" data-date="@DateTime.Now" data-date-format="dd/mm/yyyy">
                            @Html.TextBox("txtDesde", DateTime.Now, "{0:dd/MM/yyyy}", new { @placeholder = "Elegir", @id = "txtComparativoDesde" })
                            <button class="btn light-blue inverse date-button" type="button"><i class="icon-th"></i></button>
                        </div>
                    </div>
                    <div class="span6">
                        <div class="input-append date datepicker" data-date="@DateTime.Now" data-date-format="dd/mm/yyyy">
                            @Html.TextBox("txtHasta", DateTime.Now, "{0:dd/MM/yyyy}", new { @placeholder = "Elegir", @id = "txtComparativoHasta" })
                            <button class="btn light-blue inverse date-button" type="button"><i class="icon-th"></i></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" data-dismiss="modal" class="btn btn-small">Cerrar</button>
        <input type="button" class="btn btn btn-small medium-blue" value="Comparar" onclick="showComparativeChart()" />
    </div>
</div>
<div class="tab-content">
    <div class="tab-pane active" id="rptHistorial">
        <div class="row-fluid">
            <div class="span4">
                Elegir Asesoría:
            @Html.DropDownList("IdExamen", new SelectList(new TestsApp.Models.TestsAppBDEntities().Examen.Where(r => r.IdTipo == 2), "Id", "Titulo"), string.Empty, new Dictionary<string, object>
                                                       {
                                                           { "data-placeholder", "Seleccione" }, 
                                                           { "class", "chzn-select" },
                                                           { "id", "ddlExamen"}
                                                       })
            </div>
        </div>
        <div class="section-title"></div>
        <div class="row-fluid">
            <div id="examenContainer">
                @Html.Partial("ReportAsesoriaPartial", new List<TestsApp.Models.ExamenUsuario>());
            </div>
        </div>
        <div class="row-fluid">
            <div id="chart" style="height: 300px; overflow: hidden;">
            </div>
        </div>
    </div>
    <div class="tab-pane" id="rptRanking">
        <div class="padded">
            <div class="input-prepend input-append">
                <span class="add-on">Top</span>
                <input class="span1" id="txtTop" type="text" placeholder="##">
                <button class="btn" type="button" onclick="showRanking()">Ver</button>

            </div>
            <div id="ranking">
                @Html.Partial("ReportRankingAsesoriaPartial", new List<TestsApp.Models.ExamenUsuario>())
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function showRanking() {
        $.ajax({
            type: "GET",
            url: "@Url.Action("DrawRankingAsesoria")",
            data: { top: $("#txtTop").val() },
            success: function (data) {
                $("#ranking").html(data);
            }
        });
    }
    var options = {
        title: {},
        scrollbar: {
            enabled: true
        },
        subtitle: {},
        chart: {
            renderTo: 'chart',
            type: 'line'
        },
        series: [{}],
        xAxis: [{}],
        yAxis: [{}]
    };
    function showComparativeChart() {
        var fDesde = $("#txtComparativoDesde").val();
        var fHasta = $("#txtComparativoHasta").val();
        var getData = { arrayIds: comparativeArray, sDesde: fDesde, sHasta: fHasta };

        $.ajax({
            type: "GET",
            url: "@Url.Action("DrawComparativeChart")",
            data: getData,
            success: function (data) {
                $('#modal-fechasComparativo').modal('hide');
                options.series = data.allSeries;
                options.xAxis = data.xAxis;
                options.yAxis = data.yAxis;
                options.title = data.title;
                options.subtitle = data.subtitle;
                var obj = function () { return this.point.name; }
                $.each(options.series, function () {
                    this.dataLabels.formatter = obj;
                });
                var chart = new Highcharts.Chart(options);
            },
            dataType: "json",
            traditional: true
        });
    }

    function showChart(IdEjecutivo, IdAster) {
        $.getJSON('@Url.Action("DrawChart")', { idEjecutivo: IdEjecutivo, idAster: IdAster }, function (data) {
            options.series = data.allSeries;
            options.xAxis = data.xAxis;
            options.yAxis = data.yAxis;
            options.title = data.title;
            options.subtitle = data.subtitle;
            var obj = function () { return this.point.name; }
            $.each(options.series, function () {
                this.dataLabels.formatter = obj;
            });
            var chart = new Highcharts.Chart(options);
            var chart = new Highcharts.Chart(options);
        });
    }
    var comparativeArray = new Array();

    function renderTableExamen(selectList) {
        var selectedId = $(selectList).val();
        if (selectedId != null && selectedId != '') {
            $.ajax({
                type: "GET",
                url: "@Url.Action("DrawTableAsesoria", "Report")",
                data: { id: selectedId },
                success: function (data) {
                    $("#examenContainer").html(data);
                    var rctable = $('#rptAsesoriaTerreno').dataTable({

                        "aoColumns": [
                                 { 'sname': 'idExamenUsuario', 'sType': 'string', 'bVisible': false },
                                 { 'sName': 'nombreEjecutivo', 'sType': 'string', 'bVisible': true },
                                 { 'sName': 'nombreAster', 'sType': 'string', 'bVisible': true },
                                 { 'sName': 'puntaje', 'sType': 'numeric', 'bVisible': true },
                                 { 'sName': 'fecha', 'sType': 'date', 'bVisible': true },
                                 { 'sName': 'btn', 'sType': 'html', 'bVisible': true, "bSortable": false }
                        ],
                        "oLanguage": {
                            "sProcessing": "Procesando...",
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sZeroRecords": "No se encontraron resultados",
                            "sEmptyTable": "Ningún dato disponible en esta tabla",
                            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix": "",
                            "sSearch": "Buscar:",
                            "sUrl": "",
                            "sInfoThousands": ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Último",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        "bJQueryUI": true,
                        "sPaginationType": "full_numbers",
                        "sDom": '<"divComparativo">T<"clear"><""l>t<"F"p>',
                        "oTableTools": {
                            "sRowSelect": "multi",
                            "aButtons": [],
                            "fnRowSelected": function (node) {
                                aData = rctable.fnGetData(node); //nice array of cell values
                                comparativeArray.push(aData[0]);
                            },
                            "fnRowDeselected": function (node) {
                                aData = rctable.fnGetData(node); //nice array of cell values
                                var indexElement = comparativeArray.indexOf(aData[0]);
                                comparativeArray.splice(indexElement, 1);
                            },
                            "fnPreRowSelect": function (e, nodes) {
                                if ($(e.target).hasClass('historial')) {
                                    return false;
                                }
                                return true;
                            }
                        }
                    })
             .columnFilter({
                 aoColumns: [{ type: "text" },
                             { type: "text" },
                             { type: "text" },
                             { type: "text" },
                             { type: "text" }
                 ],
                 bUseColVis: true
             });
                    $("div.divComparativo").html('<a class="btn btn-mini" href="#modal-fechasComparativo" data-toggle="modal">Comparativo</a>');
                }
            });
        }
    }

    $(function () {
        $('#myTab a').click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        })

        $("#ddlExamen").change(
        function () {
            renderTableExamen(this);
            //renderChartExamen(this);
        });

        var rctable = $('#rptAsesoriaTerreno').dataTable({

            "aoColumns": [
                     { 'sname': 'idExamenUsuario', 'sType': 'string', 'bVisible': false },
                     { 'sName': 'nombreEjecutivo', 'sType': 'string', 'bVisible': true },
                     { 'sName': 'nombreAster', 'sType': 'string', 'bVisible': true },
                     { 'sName': 'puntaje', 'sType': 'numeric', 'bVisible': true },
                     { 'sName': 'fecha', 'sType': 'date', 'bVisible': true },
                     { 'sName': 'btn', 'sType': 'html', 'bVisible': true, "bSortable": false }
            ],
            "oLanguage": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "Ningún dato disponible en esta tabla",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            },
            "bJQueryUI": true,
            "sPaginationType": "full_numbers",
            "sDom": '<"divComparativo">T<"clear"><""l>t<"F"p>',
            "oTableTools": {
                "sRowSelect": "multi",
                "aButtons": [],
                "fnRowSelected": function (node) {
                    aData = rctable.fnGetData(node); //nice array of cell values
                    comparativeArray.push(aData[0]);
                },
                "fnRowDeselected": function (node) {
                    aData = rctable.fnGetData(node); //nice array of cell values
                    var indexElement = comparativeArray.indexOf(aData[0]);
                    comparativeArray.splice(indexElement, 1);
                },
                "fnPreRowSelect": function (e, nodes) {
                    if ($(e.target).hasClass('historial')) {
                        return false;
                    }
                    return true;
                }
            }
        })
             .columnFilter({
                 aoColumns: [{ type: "text" },
                             { type: "text" },
                             { type: "text" },
                             { type: "text" },
                             { type: "text" }
                 ],
                 bUseColVis: true
             });
        //$("div.divComparativo").html('<input type="button" class="btn btn-mini" value="Comparativo" onclick="showComparativeChart()" />');
        $("div.divComparativo").html('<a class="btn btn-mini" href="#modal-fechasComparativo" data-toggle="modal">Comparativo</a>');
    });

</script>
