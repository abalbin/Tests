@model TestsApp.Models.Examen
@{DateTime fechaActual = DateTime.Now;
  TestsApp.App_Code.Helper helperObj = new TestsApp.App_Code.Helper();
  string linea = new TestsApp.Models.TestsAppBDEntities().NombreTabla.First(r => r.Tabla == "Linea").NombreMostrar;
}
<div class="article">
    <div class="post-info">
        @helperObj.ReturnTextDifferenceNow(Model.FechaCreacion)
    </div>
    <div class="post-content-preview">
        <h3>
            @Model.Titulo
        </h3>
        @if (Model.IdTipo != 2)
        {
            string line = Model.Producto == null ? "" : Model.Producto.Linea.Nombre;
            string prod = Model.Producto == null ? "" : Model.Producto.Nombre;
            <p>@linea: @line</p>
            <p>Producto: @prod</p>
            <p>
                Fecha de ejecución programada: @Model.FechaEjecucion.Value.Day de @Model.FechaEjecucion.Value.ToString("MMMM") del @Model.FechaEjecucion.Value.Year
            </p>
        }
    </div>

    <div class="article-actions">
        @if (Model.IdTipo != 2)
        {

            if (User.IsInRole("Administrador"))
            {
                if (Model.IdEstado == 1)
                {
            @Html.ActionLink("Editar", "Create", new { id = Model.Id }, new { @class = "btn btn-mini light-blue inverse" })
            @Ajax.ActionLink("Publicar", "Publish", new { id = Model.Id }, new AjaxOptions { UpdateTargetId = "modal-publicar-examen", OnSuccess = "showModalPublish" }, new { @class = "btn btn-mini dark-blue" })
                }
                if (TimeZoneInfo.ConvertTime(DateTime.Now, TimeZoneInfo.FindSystemTimeZoneById("SA Pacific Standard Time")).Date < Model.FechaEjecucion.Value.Date && Model.IdEstado == 3)
                {
                    @Ajax.ActionLink("Cambiar Fecha", "ChangeDate", new { id = Model.Id }, new AjaxOptions { UpdateTargetId = "modal-changeDate-examen", OnSuccess = "showModalChangeDate" }, new { @class = "btn btn-mini light-blue inverse" })
                }
            }
            if (Model.IdEstado == 3)
            {
                if (Model.FechaEjecucion.Value.Date == DateTime.Now.Date)
                {
                    TestsApp.Models.UserProfile user = new TestsApp.Models.TestsAppBDEntities().UserProfile.First(r => r.UserName == User.Identity.Name);
                    TestsApp.Models.ExamenUsuario exusua = new TestsApp.Models.TestsAppBDEntities().ExamenUsuario.SingleOrDefault(r => r.IdExamen == Model.Id && r.IdUsuario == user.UserId);
                    if (exusua == null || exusua.Estado == 0)
                    {
            @Html.ActionLink("Dar", "Give", new { id = Model.Id }, new { @class = "btn btn-mini light-blue inverse" })
                    }
                    else
                    {
                        if (exusua.Estado == 1)
                        {
            @Html.ActionLink("En ejecución", "Give", new { id = Model.Id }, new { @class = "btn btn-mini light-blue inverse" })
                        }
                        if (exusua.Estado == 2)
                        {
            <p>
                Fecha de ejecución real: @Model.FechaEjecucion.Value.Day de @Model.FechaEjecucion.Value.ToString("MMMM") del @Model.FechaEjecucion.Value.Year a las @exusua.FechaInicio.Value.ToString("HH:mm")
            </p>
                        }
                    }
                }
                else
                {
            <button type="button" class="btn btn-mini btn-dar-disabled" disabled title="ASDasdasd">Dar</button>
                }
            }

        }
        else
        {
            if (Model.IdEstado == 3)
            {
            @Html.ActionLink("Tomar", "Give", new { id = Model.Id }, new { @class = "btn btn-mini light-blue inverse" })
            }
            if (User.IsInRole("Administrador") && Model.IdEstado == 1)
            {
            @Ajax.ActionLink("Publicar", "Publish", new { id = Model.Id }, new AjaxOptions { UpdateTargetId = "modal-publicar-examen", OnSuccess = "showModalPublish" }, new { @class = "btn btn-mini dark-blue" })
            @Html.ActionLink("Editar", "Create", new { id = Model.Id }, new { @class = "btn btn-mini light-blue inverse" })
            }
        }
        @Html.ActionLink("Clonar", "Clone", new { id = Model.Id }, new { @class = "btn btn-mini green" })
    </div>
</div>

